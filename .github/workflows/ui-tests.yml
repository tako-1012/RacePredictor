name: UI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'  # 毎日午前2時（JST）に実行

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend-react/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend-react
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd frontend-react
        npx playwright install --with-deps ${{ matrix.browser }}
        
    - name: Build application
      run: |
        cd frontend-react
        npm run build
        
    - name: Run Playwright tests
      run: |
        cd frontend-react
        npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}-${{ matrix.node-version }}
        path: frontend-react/playwright-report/
        retention-days: 30
        
    - name: Upload test results JSON
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}-${{ matrix.node-version }}
        path: frontend-react/test-results/
        retention-days: 30

  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend-react/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend-react
        npm ci
        
    - name: Run unit tests
      run: |
        cd frontend-react
        npm run test:coverage
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: frontend-react/coverage/
        retention-days: 30
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: frontend-react/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  accessibility-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend-react/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend-react
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd frontend-react
        npx playwright install --with-deps chromium
        
    - name: Build application
      run: |
        cd frontend-react
        npm run build
        
    - name: Run accessibility tests
      run: |
        cd frontend-react
        npx playwright test --project=chromium --grep="アクセシビリティ"
      env:
        CI: true
        
    - name: Upload accessibility test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-test-results
        path: frontend-react/playwright-report/
        retention-days: 30

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend-react/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend-react
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd frontend-react
        npx playwright install --with-deps chromium
        
    - name: Build application
      run: |
        cd frontend-react
        npm run build
        
    - name: Run performance tests
      run: |
        cd frontend-react
        npx playwright test --project=chromium --grep="パフォーマンス"
      env:
        CI: true
        
    - name: Upload performance test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: frontend-react/playwright-report/
        retention-days: 30

  test-summary:
    runs-on: ubuntu-latest
    needs: [ui-tests, unit-tests, accessibility-tests, performance-tests]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Generate test summary
      run: |
        echo "# Test Results Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## UI Tests" >> test-summary.md
        echo "- Status: ${{ needs.ui-tests.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Unit Tests" >> test-summary.md
        echo "- Status: ${{ needs.unit-tests.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Accessibility Tests" >> test-summary.md
        echo "- Status: ${{ needs.accessibility-tests.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Performance Tests" >> test-summary.md
        echo "- Status: ${{ needs.performance-tests.result }}" >> test-summary.md
        
    - name: Upload test summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
        retention-days: 30
