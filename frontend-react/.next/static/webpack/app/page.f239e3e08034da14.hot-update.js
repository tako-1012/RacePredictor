"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; },\n/* harmony export */   handleApiError: function() { return /* binding */ handleApiError; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nconst API_BASE_URL = \"http://localhost:8000\" || 0;\n// Axiosインスタンスを作成\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    timeout: 10000\n});\n// リクエストインターセプター（認証トークンを自動追加）\napiClient.interceptors.request.use((config)=>{\n    var _config_method;\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    console.log(\"\\uD83D\\uDD0D API Request:\", (_config_method = config.method) === null || _config_method === void 0 ? void 0 : _config_method.toUpperCase(), config.url, config.data);\n    return config;\n}, (error)=>{\n    console.error(\"❌ Request error:\", error);\n    return Promise.reject(error);\n});\n// レスポンスインターセプター（エラーハンドリング）\napiClient.interceptors.response.use((response)=>{\n    console.log(\"✅ API Response:\", response.status, response.data);\n    return response;\n}, (error)=>{\n    var _error_response, _error_response1;\n    console.error(\"❌ API Error:\", (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status, (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.data);\n    console.error(\"❌ Error details:\", error);\n    // エラーレスポンスの詳細を確認\n    if (error.response) {\n        // サーバーからのレスポンスがある場合\n        const { status, data } = error.response;\n        console.error(\"❌ Server Error: \".concat(status), data);\n        if (status === 401) {\n            // 認証エラーの場合、トークンを削除してログインページにリダイレクト\n            localStorage.removeItem(\"access_token\");\n            localStorage.removeItem(\"refresh_token\");\n            window.location.href = \"/login\";\n        }\n    } else if (error.request) {\n        // リクエストは送信されたが、レスポンスがない場合\n        console.error(\"❌ Network Error: No response received\");\n    } else {\n        // その他のエラー\n        console.error(\"❌ Request Error:\", error.message);\n    }\n    return Promise.reject(error);\n});\n// API エンドポイント\nconst api = {\n    // 認証関連\n    auth: {\n        login: async (data)=>{\n            console.log(\"\\uD83D\\uDD0D ログインAPI呼び出し:\", data);\n            try {\n                const response = await apiClient.post(\"/api/auth/login\", data);\n                console.log(\"✅ ログイン成功:\", response.data);\n                // トークンを保存\n                if (response.data.access_token) {\n                    localStorage.setItem(\"access_token\", response.data.access_token);\n                    console.log(\"\\uD83C\\uDFAB アクセストークン保存完了\");\n                }\n                if (response.data.refresh_token) {\n                    localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n                    console.log(\"\\uD83D\\uDD04 リフレッシュトークン保存完了\");\n                }\n                return response;\n            } catch (error) {\n                console.error(\"❌ ログインエラー:\", error);\n                // エラーの詳細をログ出力\n                if (error.response) {\n                    console.error(\"❌ レスポンスエラー:\", error.response.status, error.response.data);\n                } else if (error.request) {\n                    console.error(\"❌ リクエストエラー:\", error.request);\n                } else {\n                    console.error(\"❌ その他のエラー:\", error.message);\n                }\n                throw error;\n            }\n        },\n        register: (data)=>apiClient.post(\"/api/auth/register\", data),\n        refresh: (data)=>apiClient.post(\"/api/auth/refresh\", data),\n        logout: ()=>apiClient.post(\"/api/auth/logout\")\n    },\n    // ユーザー関連\n    users: {\n        getProfile: ()=>apiClient.get(\"/api/users/profile\"),\n        updateProfile: (data)=>apiClient.put(\"/api/users/profile\", data)\n    },\n    // ワークアウト関連\n    workouts: {\n        getAll: (params)=>{\n            if (params) {\n                const searchParams = new URLSearchParams();\n                if (params.page) searchParams.append(\"page\", params.page.toString());\n                if (params.limit) searchParams.append(\"limit\", params.limit.toString());\n                if (params.sort_by) searchParams.append(\"sort_by\", params.sort_by);\n                if (params.sort_order) searchParams.append(\"sort_order\", params.sort_order);\n                if (params.date_from) searchParams.append(\"date_from\", params.date_from);\n                if (params.date_to) searchParams.append(\"date_to\", params.date_to);\n                if (params.distance_min) searchParams.append(\"distance_min\", params.distance_min.toString());\n                if (params.distance_max) searchParams.append(\"distance_max\", params.distance_max.toString());\n                const queryString = searchParams.toString();\n                const url = \"/api/workouts\".concat(queryString ? \"?\" + queryString : \"\");\n                return apiClient.get(url);\n            }\n            return apiClient.get(\"/api/workouts\");\n        },\n        getById: (id)=>apiClient.get(\"/api/workouts/\".concat(id)),\n        create: (data)=>apiClient.post(\"/api/workouts\", data),\n        update: (id, data)=>apiClient.put(\"/api/workouts/\".concat(id), data),\n        delete: (id)=>apiClient.delete(\"/api/workouts/\".concat(id))\n    },\n    // ワークアウトタイプ関連\n    workoutTypes: {\n        getAll: ()=>apiClient.get(\"/api/workout-types\")\n    },\n    // レース関連\n    races: {\n        getAll: (params)=>{\n            if (params) {\n                const searchParams = new URLSearchParams();\n                if (params.page) searchParams.append(\"page\", params.page.toString());\n                if (params.limit) searchParams.append(\"limit\", params.limit.toString());\n                if (params.sort_by) searchParams.append(\"sort_by\", params.sort_by);\n                if (params.sort_order) searchParams.append(\"sort_order\", params.sort_order);\n                if (params.date_from) searchParams.append(\"date_from\", params.date_from);\n                if (params.date_to) searchParams.append(\"date_to\", params.date_to);\n                if (params.distance_min) searchParams.append(\"distance_min\", params.distance_min.toString());\n                if (params.distance_max) searchParams.append(\"distance_max\", params.distance_max.toString());\n                const queryString = searchParams.toString();\n                const url = \"/api/races\".concat(queryString ? \"?\" + queryString : \"\");\n                return apiClient.get(url);\n            }\n            return apiClient.get(\"/api/races\");\n        },\n        getById: (id)=>apiClient.get(\"/api/races/\".concat(id)),\n        create: (data)=>apiClient.post(\"/api/races\", data),\n        update: (id, data)=>apiClient.put(\"/api/races/\".concat(id), data),\n        delete: (id)=>apiClient.delete(\"/api/races/\".concat(id))\n    },\n    // レースタイプ関連\n    raceTypes: {\n        getAll: ()=>apiClient.get(\"/api/race-types\")\n    },\n    // ダッシュボード関連\n    dashboard: {\n        getStats: ()=>apiClient.get(\"/api/dashboard/stats\"),\n        getRecentWorkouts: ()=>apiClient.get(\"/api/dashboard/recent-workouts\"),\n        getCharts: ()=>apiClient.get(\"/api/dashboard/charts\")\n    },\n    // CSVインポート関連\n    import: {\n        upload: (file)=>{\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            return apiClient.post(\"/api/import/csv\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            });\n        },\n        preview: (file)=>{\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            return apiClient.post(\"/api/import/preview\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            });\n        }\n    },\n    // 予測関連\n    predictions: {\n        getPredictions: ()=>apiClient.get(\"/api/predictions\"),\n        createPrediction: (data)=>apiClient.post(\"/api/predictions\", data)\n    }\n};\n// エラーハンドリング関数\nconst handleApiError = (error)=>{\n    console.error(\"\\uD83D\\uDD0D API Error Handler:\", error);\n    if (error.response) {\n        // サーバーからのレスポンスがある場合\n        const { status, data } = error.response;\n        switch(status){\n            case 400:\n                return {\n                    message: data.detail || \"リクエストが正しくありません\"\n                };\n            case 401:\n                return {\n                    message: \"認証が必要です\"\n                };\n            case 403:\n                return {\n                    message: \"アクセスが拒否されました\"\n                };\n            case 404:\n                return {\n                    message: \"リソースが見つかりません\"\n                };\n            case 500:\n                return {\n                    message: \"サーバーエラーが発生しました\"\n                };\n            default:\n                return {\n                    message: data.detail || \"エラーが発生しました\"\n                };\n        }\n    } else if (error.request) {\n        // リクエストは送信されたが、レスポンスがない場合\n        return {\n            message: \"ネットワークエラーが発生しました\"\n        };\n    } else {\n        // その他のエラー\n        return {\n            message: error.message || \"予期しないエラーが発生しました\"\n        };\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});