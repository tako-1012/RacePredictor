"""add_ai_models_tables

Revision ID: 82298e74c495
Revises: 5cc1e2ccbe36
Create Date: 2025-09-25 18:28:40.322150

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '82298e74c495'
down_revision: Union[str, None] = '5cc1e2ccbe36'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='モデル名'),
    sa.Column('version', sa.String(length=50), nullable=False, comment='モデルバージョン'),
    sa.Column('algorithm', sa.String(length=100), nullable=False, comment='使用アルゴリズム'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='更新日時'),
    sa.Column('performance_metrics', sa.JSON(), nullable=True, comment='性能指標（MAE, MSE, R²等）'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='アクティブフラグ'),
    sa.Column('model_path', sa.String(length=500), nullable=True, comment='モデルファイルのパス'),
    sa.Column('training_data_count', sa.Integer(), nullable=True, comment='学習データ数'),
    sa.Column('feature_count', sa.Integer(), nullable=True, comment='特徴量数'),
    sa.Column('hyperparameters', sa.JSON(), nullable=True, comment='ハイパーパラメータ'),
    sa.Column('description', sa.Text(), nullable=True, comment='モデル説明'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_models_id'), 'ai_models', ['id'], unique=False)
    op.create_index(op.f('ix_ai_models_name'), 'ai_models', ['name'], unique=False)
    op.create_table('ai_system_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_key', sa.String(length=255), nullable=False, comment='設定キー'),
    sa.Column('config_value', sa.JSON(), nullable=False, comment='設定値'),
    sa.Column('description', sa.Text(), nullable=True, comment='設定説明'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='更新日時'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_system_config_config_key'), 'ai_system_config', ['config_key'], unique=True)
    op.create_index(op.f('ix_ai_system_config_id'), 'ai_system_config', ['id'], unique=False)
    op.create_table('feature_store',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='ユーザーID'),
    sa.Column('calculation_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='計算日時'),
    sa.Column('features', sa.JSON(), nullable=False, comment='特徴量データ'),
    sa.Column('feature_version', sa.String(length=50), nullable=True, comment='特徴量バージョン'),
    sa.Column('total_workouts', sa.Integer(), nullable=True, comment='総練習数'),
    sa.Column('total_distance', sa.Float(), nullable=True, comment='総距離'),
    sa.Column('avg_pace', sa.Float(), nullable=True, comment='平均ペース'),
    sa.Column('training_period_days', sa.Integer(), nullable=True, comment='練習期間（日数）'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feature_store_id'), 'feature_store', ['id'], unique=False)
    op.create_index(op.f('ix_feature_store_user_id'), 'feature_store', ['user_id'], unique=False)
    op.create_table('model_training_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.String(length=255), nullable=False, comment='ジョブID'),
    sa.Column('status', sa.String(length=50), nullable=True, comment='ジョブステータス'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='作成日時'),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True, comment='開始日時'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='完了日時'),
    sa.Column('algorithm', sa.String(length=100), nullable=True, comment='使用アルゴリズム'),
    sa.Column('training_data_count', sa.Integer(), nullable=True, comment='学習データ数'),
    sa.Column('hyperparameters', sa.JSON(), nullable=True, comment='ハイパーパラメータ'),
    sa.Column('result_model_id', sa.Integer(), nullable=True, comment='結果モデルID'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='エラーメッセージ'),
    sa.Column('performance_metrics', sa.JSON(), nullable=True, comment='性能指標'),
    sa.ForeignKeyConstraint(['result_model_id'], ['ai_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_training_jobs_id'), 'model_training_jobs', ['id'], unique=False)
    op.create_index(op.f('ix_model_training_jobs_job_id'), 'model_training_jobs', ['job_id'], unique=True)
    op.create_table('prediction_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='ユーザーID'),
    sa.Column('model_id', sa.Integer(), nullable=False, comment='モデルID'),
    sa.Column('race_type', sa.String(length=100), nullable=False, comment='レース種目'),
    sa.Column('distance', sa.Float(), nullable=False, comment='距離（km）'),
    sa.Column('predicted_time', sa.Float(), nullable=False, comment='予測タイム（秒）'),
    sa.Column('confidence', sa.Float(), nullable=True, comment='予測信頼度（0-1）'),
    sa.Column('features_used', sa.JSON(), nullable=True, comment='使用した特徴量'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='予測日時'),
    sa.Column('actual_time', sa.Float(), nullable=True, comment='実際のタイム（秒）'),
    sa.Column('actual_date', sa.DateTime(timezone=True), nullable=True, comment='実際のレース日時'),
    sa.Column('prediction_accuracy', sa.Float(), nullable=True, comment='予測精度（実績との差）'),
    sa.ForeignKeyConstraint(['model_id'], ['ai_models.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prediction_results_id'), 'prediction_results', ['id'], unique=False)
    op.create_index(op.f('ix_prediction_results_model_id'), 'prediction_results', ['model_id'], unique=False)
    op.create_index(op.f('ix_prediction_results_user_id'), 'prediction_results', ['user_id'], unique=False)
    op.create_table('training_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False, comment='モデルID'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='記録日時'),
    sa.Column('mae', sa.Float(), nullable=True, comment='平均絶対誤差'),
    sa.Column('mse', sa.Float(), nullable=True, comment='平均二乗誤差'),
    sa.Column('rmse', sa.Float(), nullable=True, comment='平方根平均二乗誤差'),
    sa.Column('r2_score', sa.Float(), nullable=True, comment='決定係数'),
    sa.Column('mape', sa.Float(), nullable=True, comment='平均絶対パーセント誤差'),
    sa.Column('training_data_count', sa.Integer(), nullable=True, comment='学習データ数'),
    sa.Column('validation_data_count', sa.Integer(), nullable=True, comment='検証データ数'),
    sa.Column('test_data_count', sa.Integer(), nullable=True, comment='テストデータ数'),
    sa.Column('training_time_seconds', sa.Float(), nullable=True, comment='学習時間（秒）'),
    sa.Column('cross_validation_scores', sa.JSON(), nullable=True, comment='交差検証スコア'),
    sa.Column('feature_importance', sa.JSON(), nullable=True, comment='特徴量重要度'),
    sa.ForeignKeyConstraint(['model_id'], ['ai_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_metrics_id'), 'training_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_training_metrics_model_id'), 'training_metrics', ['model_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_training_metrics_model_id'), table_name='training_metrics')
    op.drop_index(op.f('ix_training_metrics_id'), table_name='training_metrics')
    op.drop_table('training_metrics')
    op.drop_index(op.f('ix_prediction_results_user_id'), table_name='prediction_results')
    op.drop_index(op.f('ix_prediction_results_model_id'), table_name='prediction_results')
    op.drop_index(op.f('ix_prediction_results_id'), table_name='prediction_results')
    op.drop_table('prediction_results')
    op.drop_index(op.f('ix_model_training_jobs_job_id'), table_name='model_training_jobs')
    op.drop_index(op.f('ix_model_training_jobs_id'), table_name='model_training_jobs')
    op.drop_table('model_training_jobs')
    op.drop_index(op.f('ix_feature_store_user_id'), table_name='feature_store')
    op.drop_index(op.f('ix_feature_store_id'), table_name='feature_store')
    op.drop_table('feature_store')
    op.drop_index(op.f('ix_ai_system_config_id'), table_name='ai_system_config')
    op.drop_index(op.f('ix_ai_system_config_config_key'), table_name='ai_system_config')
    op.drop_table('ai_system_config')
    op.drop_index(op.f('ix_ai_models_name'), table_name='ai_models')
    op.drop_index(op.f('ix_ai_models_id'), table_name='ai_models')
    op.drop_table('ai_models')
    # ### end Alembic commands ###
