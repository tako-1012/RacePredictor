"""Initial migration

Revision ID: 001
Revises:
Create Date: 2025-01-13 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('user_type', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)

    op.create_table('workout_types',
    sa.Column('id', sa.String(36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.String(36), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('predictions',
    sa.Column('id', sa.String(36), nullable=False),
    sa.Column('user_id', sa.String(36), nullable=False),
    sa.Column('prediction_date', sa.Date(), nullable=False),
    sa.Column('target_event', sa.String(length=20), nullable=False),
    sa.Column('predicted_time_seconds', sa.Float(), nullable=False),
    sa.Column('confidence_level', sa.Float(), nullable=False),
    sa.Column('model_version', sa.String(length=20), nullable=True),
    sa.Column('base_workouts', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('race_results',
    sa.Column('id', sa.String(36), nullable=False),
    sa.Column('user_id', sa.String(36), nullable=False),
    sa.Column('race_date', sa.Date(), nullable=False),
    sa.Column('event', sa.String(length=20), nullable=False),
    sa.Column('time_seconds', sa.Float(), nullable=False),
    sa.Column('place', sa.Integer(), nullable=True),
    sa.Column('prediction_id', sa.String(36), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['predictions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('workouts',
    sa.Column('id', sa.String(36), nullable=False),
    sa.Column('user_id', sa.String(36), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('workout_type_id', sa.String(36), nullable=False),
    sa.Column('distance_meters', sa.Integer(), nullable=True),
    sa.Column('times_seconds', sa.JSON(), nullable=True),
    sa.Column('repetitions', sa.Integer(), nullable=True),
    sa.Column('rest_type', sa.String(length=50), nullable=True),
    sa.Column('rest_duration', sa.Integer(), nullable=True),
    sa.Column('intensity', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workout_type_id'], ['workout_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workouts')
    op.drop_table('race_results')
    op.drop_table('predictions')
    op.drop_table('workout_types')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###